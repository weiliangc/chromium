This is a testharness.js-based test.
PASS deleteContents on Range must enqueue a disconnected reaction 
PASS extractContents on Range must enqueue a disconnected reaction 
PASS cloneContents on Range must enqueue an attributeChanged reaction when cloning an element with an observed attribute 
PASS cloneContents on Range must not enqueue an attributeChanged reaction when cloning an element with an unobserved attribute 
PASS cloneContents on Range must enqueue an attributeChanged reaction when cloning an element only for observed attributes 
PASS insertNode on Range must enqueue a connected reaction 
PASS insertNode on Range must enqueue a disconnected reaction, an adopted reaction, and a connected reaction when the custom element was in another document 
PASS surroundContents on Range must enqueue a connected reaction 
PASS surroundContents on Range must enqueue a disconnected reaction, an adopted reaction, and a connected reaction when the custom element was in another document 
FAIL createContextualFragment on Range must construct a custom element assert_equals: expected (function) function "class CustomElement extends HTMLElement {
        constructor() {
            super();
            log.push({type: 'constructed', element: this});
        }
        attributeChangedCallback(...args) {
            log.push(create_attribute_changed_callback_log(this, ...args));
        }
        connectedCallback() { log.push({type: 'connected', element: this}); }
        disconnectedCallback() { log.push({type: 'disconnected', element: this}); }
        adoptedCallback(oldDocument, newDocument) { log.push({type: 'adopted', element: this, oldDocument: oldDocument, newDocument: newDocument}); }
    }" but got (object) object "[object HTMLElement]"
Harness: the test ran to completion.

